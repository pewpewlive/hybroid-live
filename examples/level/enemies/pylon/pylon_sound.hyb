env PylonSound as Sound

let explosion = ParseSound("https://jfxr.frozenfractal.com/#%7B%22_version%22%3A1%2C%22_name%22%3A%22Random%202%22%2C%22_locked%22%3A%5B%5D%2C%22sampleRate%22%3A44100%2C%22attack%22%3A0%2C%22sustain%22%3A0.027103473098891273%2C%22sustainPunch%22%3A10%2C%22decay%22%3A0.7071982438700677%2C%22tremoloDepth%22%3A65%2C%22tremoloFrequency%22%3A157%2C%22frequency%22%3A2067.137691423848%2C%22frequencySweep%22%3A-7700%2C%22frequencyDeltaSweep%22%3A0%2C%22repeatFrequency%22%3A68.8%2C%22frequencyJump1Onset%22%3A65%2C%22frequencyJump1Amount%22%3A55%2C%22frequencyJump2Onset%22%3A70%2C%22frequencyJump2Amount%22%3A60%2C%22harmonics%22%3A0%2C%22harmonicsFalloff%22%3A0.01%2C%22waveform%22%3A%22triangle%22%2C%22interpolateNoise%22%3Afalse%2C%22vibratoDepth%22%3A0%2C%22vibratoFrequency%22%3A10%2C%22squareDuty%22%3A50%2C%22squareDutySweep%22%3A0%2C%22flangerOffset%22%3A0%2C%22flangerOffsetSweep%22%3A0%2C%22bitCrush%22%3A16%2C%22bitCrushSweep%22%3A0%2C%22lowPassCutoff%22%3A6500%2C%22lowPassCutoffSweep%22%3A0%2C%22highPassCutoff%22%3A1800%2C%22highPassCutoffSweep%22%3A6100%2C%22compression%22%3A0.6%2C%22normalization%22%3Atrue%2C%22amplification%22%3A100%7D")
let explosionPrepare = ParseSound("https://jfxr.frozenfractal.com/#%7B%22_version%22%3A1%2C%22_name%22%3A%22Random%2016%22%2C%22_locked%22%3A%5B%5D%2C%22sampleRate%22%3A44100%2C%22attack%22%3A1.4824626560319736%2C%22sustain%22%3A0%2C%22sustainPunch%22%3A0%2C%22decay%22%3A0%2C%22tremoloDepth%22%3A0%2C%22tremoloFrequency%22%3A10%2C%22frequency%22%3A2100%2C%22frequencySweep%22%3A2400%2C%22frequencyDeltaSweep%22%3A22.612895016114837%2C%22repeatFrequency%22%3A0%2C%22frequencyJump1Onset%22%3A33%2C%22frequencyJump1Amount%22%3A0%2C%22frequencyJump2Onset%22%3A66%2C%22frequencyJump2Amount%22%3A0%2C%22harmonics%22%3A4%2C%22harmonicsFalloff%22%3A0.97%2C%22waveform%22%3A%22breaker%22%2C%22interpolateNoise%22%3Atrue%2C%22vibratoDepth%22%3A970%2C%22vibratoFrequency%22%3A742%2C%22squareDuty%22%3A50%2C%22squareDutySweep%22%3A0%2C%22flangerOffset%22%3A0%2C%22flangerOffsetSweep%22%3A0%2C%22bitCrush%22%3A16%2C%22bitCrushSweep%22%3A0%2C%22lowPassCutoff%22%3A1000%2C%22lowPassCutoffSweep%22%3A0%2C%22highPassCutoff%22%3A0%2C%22highPassCutoffSweep%22%3A3800%2C%22compression%22%3A1%2C%22normalization%22%3Atrue%2C%22amplification%22%3A100%7D")
let hit = ParseSound("https://jfxr.frozenfractal.com/#%7B%22_version%22%3A1%2C%22_name%22%3A%22Random%2037%22%2C%22_locked%22%3A%5B%5D%2C%22sampleRate%22%3A44100%2C%22attack%22%3A0%2C%22sustain%22%3A0.06914225548978736%2C%22sustainPunch%22%3A0%2C%22decay%22%3A0.0549415444518051%2C%22tremoloDepth%22%3A78%2C%22tremoloFrequency%22%3A378%2C%22frequency%22%3A3500%2C%22frequencySweep%22%3A0%2C%22frequencyDeltaSweep%22%3A0%2C%22repeatFrequency%22%3A0%2C%22frequencyJump1Onset%22%3A33%2C%22frequencyJump1Amount%22%3A0%2C%22frequencyJump2Onset%22%3A66%2C%22frequencyJump2Amount%22%3A0%2C%22harmonics%22%3A0%2C%22harmonicsFalloff%22%3A0.5%2C%22waveform%22%3A%22triangle%22%2C%22interpolateNoise%22%3Afalse%2C%22vibratoDepth%22%3A780%2C%22vibratoFrequency%22%3A947%2C%22squareDuty%22%3A50%2C%22squareDutySweep%22%3A0%2C%22flangerOffset%22%3A7%2C%22flangerOffsetSweep%22%3A27%2C%22bitCrush%22%3A16%2C%22bitCrushSweep%22%3A0%2C%22lowPassCutoff%22%3A7300%2C%22lowPassCutoffSweep%22%3A0%2C%22highPassCutoff%22%3A5300%2C%22highPassCutoffSweep%22%3A4600%2C%22compression%22%3A1%2C%22normalization%22%3Atrue%2C%22amplification%22%3A100%7D")


pub sounds = [explosionPrepare, explosion, hit, hit, hit]

repeat from 3 to 5 with i {
    sounds[i].frequency *= Math:Random(80, 150)/100
}