env Thing as Level

// let a = fn() -> number { return 8 }()

// let a2 = fn() {}

// a += 1

// let b = struct{name = struct{name2 = 2}}.name.name2

// let c = [1,2,3][1]

// let d = {"key" = true}["key"]

// fn name(bool _, fn() _, number... b) -> bool {
//     return b[2] == b[1]
// }
// name(d, a2, a, b, c)

// let a = 1
// pub b = 1
// const c = 1
// number d = 1
// number e 
// let ee = 2

// entity Thing {
//     number a, b
//     let c = 1

//     spawn(fixed x, y) {

//     }

//     destroy() {
      

//         Pewpew:DestroyEntity(self)
//     }

//     fn method() -> fixed {
//         number z = 1
//         repeat 30 {
//             repeat 10 {
//                 z = match ee {
//                     2 => {
//                         continue
//                     }
//                     else => {
//                         yield 1
//                     }
//                 }
//                 z += 1
//             }

   
//         }
       
//         return Fmath:ToFixed(1)
//     }
// }

// fn A() {
    
// }
